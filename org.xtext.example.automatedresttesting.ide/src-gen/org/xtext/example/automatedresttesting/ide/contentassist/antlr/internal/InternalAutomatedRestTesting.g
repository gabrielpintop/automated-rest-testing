/*
 * generated by Xtext 2.19.0
 */
grammar InternalAutomatedRestTesting;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.automatedresttesting.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.automatedresttesting.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.automatedresttesting.services.AutomatedRestTestingGrammarAccess;

}
@parser::members {
	private AutomatedRestTestingGrammarAccess grammarAccess;

	public void setGrammarAccess(AutomatedRestTestingGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleAutomatedRestTesting
entryRuleAutomatedRestTesting
:
{ before(grammarAccess.getAutomatedRestTestingRule()); }
	 ruleAutomatedRestTesting
{ after(grammarAccess.getAutomatedRestTestingRule()); } 
	 EOF 
;

// Rule AutomatedRestTesting
ruleAutomatedRestTesting 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAutomatedRestTestingAccess().getGroup()); }
		(rule__AutomatedRestTesting__Group__0)
		{ after(grammarAccess.getAutomatedRestTestingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getAttribute_ImplParserRuleCall()); }
		ruleAttribute_Impl
		{ after(grammarAccess.getAttributeAccess().getAttribute_ImplParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRestService
entryRuleRestService
:
{ before(grammarAccess.getRestServiceRule()); }
	 ruleRestService
{ after(grammarAccess.getRestServiceRule()); } 
	 EOF 
;

// Rule RestService
ruleRestService 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRestServiceAccess().getGroup()); }
		(rule__RestService__Group__0)
		{ after(grammarAccess.getRestServiceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTest
entryRuleTest
:
{ before(grammarAccess.getTestRule()); }
	 ruleTest
{ after(grammarAccess.getTestRule()); } 
	 EOF 
;

// Rule Test
ruleTest 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTestAccess().getGroup()); }
		(rule__Test__Group__0)
		{ after(grammarAccess.getTestAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssertion
entryRuleAssertion
:
{ before(grammarAccess.getAssertionRule()); }
	 ruleAssertion
{ after(grammarAccess.getAssertionRule()); } 
	 EOF 
;

// Rule Assertion
ruleAssertion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssertionAccess().getGroup()); }
		(rule__Assertion__Group__0)
		{ after(grammarAccess.getAssertionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getValueAssignment()); }
		(rule__IntegerLiteral__ValueAssignment)
		{ after(grammarAccess.getIntegerLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
		(rule__StringLiteral__ValueAssignment)
		{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementLiteral
entryRuleElementLiteral
:
{ before(grammarAccess.getElementLiteralRule()); }
	 ruleElementLiteral
{ after(grammarAccess.getElementLiteralRule()); } 
	 EOF 
;

// Rule ElementLiteral
ruleElementLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementLiteralAccess().getValueAssignment()); }
		(rule__ElementLiteral__ValueAssignment)
		{ after(grammarAccess.getElementLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMappingElement
entryRuleMappingElement
:
{ before(grammarAccess.getMappingElementRule()); }
	 ruleMappingElement
{ after(grammarAccess.getMappingElementRule()); } 
	 EOF 
;

// Rule MappingElement
ruleMappingElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingElementAccess().getGroup()); }
		(rule__MappingElement__Group__0)
		{ after(grammarAccess.getMappingElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRestriction
entryRuleRestriction
:
{ before(grammarAccess.getRestrictionRule()); }
	 ruleRestriction
{ after(grammarAccess.getRestrictionRule()); } 
	 EOF 
;

// Rule Restriction
ruleRestriction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRestrictionAccess().getGroup()); }
		(rule__Restriction__Group__0)
		{ after(grammarAccess.getRestrictionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute_Impl
entryRuleAttribute_Impl
:
{ before(grammarAccess.getAttribute_ImplRule()); }
	 ruleAttribute_Impl
{ after(grammarAccess.getAttribute_ImplRule()); } 
	 EOF 
;

// Rule Attribute_Impl
ruleAttribute_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttribute_ImplAccess().getGroup()); }
		(rule__Attribute_Impl__Group__0)
		{ after(grammarAccess.getAttribute_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomainAttribute
entryRuleDomainAttribute
:
{ before(grammarAccess.getDomainAttributeRule()); }
	 ruleDomainAttribute
{ after(grammarAccess.getDomainAttributeRule()); } 
	 EOF 
;

// Rule DomainAttribute
ruleDomainAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainAttributeAccess().getGroup()); }
		(rule__DomainAttribute__Group__0)
		{ after(grammarAccess.getDomainAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleEntity
entryRuleSimpleEntity
:
{ before(grammarAccess.getSimpleEntityRule()); }
	 ruleSimpleEntity
{ after(grammarAccess.getSimpleEntityRule()); } 
	 EOF 
;

// Rule SimpleEntity
ruleSimpleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleEntityAccess().getGroup()); }
		(rule__SimpleEntity__Group__0)
		{ after(grammarAccess.getSimpleEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AssertionType
ruleAssertionType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionTypeAccess().getAlternatives()); }
		(rule__AssertionType__Alternatives)
		{ after(grammarAccess.getAssertionTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AttributeType
ruleAttributeType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeTypeAccess().getAlternatives()); }
		(rule__AttributeType__Alternatives)
		{ after(grammarAccess.getAttributeTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule RelationalOperator
ruleRelationalOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
		(rule__RelationalOperator__Alternatives)
		{ after(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MethodType
ruleMethodType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodTypeAccess().getAlternatives()); }
		(rule__MethodType__Alternatives)
		{ after(grammarAccess.getMethodTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ParameterType
ruleParameterType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterTypeAccess().getAlternatives()); }
		(rule__ParameterType__Alternatives)
		{ after(grammarAccess.getParameterTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MockTypes
ruleMockTypes
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMockTypesAccess().getAlternatives()); }
		(rule__MockTypes__Alternatives)
		{ after(grammarAccess.getMockTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getEntityParserRuleCall_0()); }
		ruleEntity
		{ after(grammarAccess.getElementAccess().getEntityParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getSimpleEntityParserRuleCall_1()); }
		ruleSimpleEntity
		{ after(grammarAccess.getElementAccess().getSimpleEntityParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Alternatives_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestServiceAccess().getGroup_7_0()); }
		(rule__RestService__Group_7_0__0)
		{ after(grammarAccess.getRestServiceAccess().getGroup_7_0()); }
	)
	|
	(
		{ before(grammarAccess.getRestServiceAccess().getParametersAssignment_7_1()); }
		(rule__RestService__ParametersAssignment_7_1)
		{ after(grammarAccess.getRestServiceAccess().getParametersAssignment_7_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getDOTTerminalRuleCall_1_0_1_0()); }
		RULE_DOT
		{ after(grammarAccess.getExpressionAccess().getDOTTerminalRuleCall_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getARROWTerminalRuleCall_1_0_1_1()); }
		RULE_ARROW
		{ after(grammarAccess.getExpressionAccess().getARROWTerminalRuleCall_1_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getElementLiteralParserRuleCall_0()); }
		ruleElementLiteral
		{ after(grammarAccess.getLiteralAccess().getElementLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_1()); }
		ruleStringLiteral
		{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getIntegerLiteralParserRuleCall_2()); }
		ruleIntegerLiteral
		{ after(grammarAccess.getLiteralAccess().getIntegerLiteralParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionTypeAccess().getResponseEnumLiteralDeclaration_0()); }
		('response->')
		{ after(grammarAccess.getAssertionTypeAccess().getResponseEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssertionTypeAccess().getInformationEnumLiteralDeclaration_1()); }
		('response.')
		{ after(grammarAccess.getAssertionTypeAccess().getInformationEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeTypeAccess().getStringEnumLiteralDeclaration_0()); }
		('string')
		{ after(grammarAccess.getAttributeTypeAccess().getStringEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeTypeAccess().getBooleanEnumLiteralDeclaration_1()); }
		('boolean')
		{ after(grammarAccess.getAttributeTypeAccess().getBooleanEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeTypeAccess().getIntegerEnumLiteralDeclaration_2()); }
		('integer')
		{ after(grammarAccess.getAttributeTypeAccess().getIntegerEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeTypeAccess().getDoubleEnumLiteralDeclaration_3()); }
		('double')
		{ after(grammarAccess.getAttributeTypeAccess().getDoubleEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeTypeAccess().getDateEnumLiteralDeclaration_4()); }
		('date')
		{ after(grammarAccess.getAttributeTypeAccess().getDateEnumLiteralDeclaration_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getMinorEnumLiteralDeclaration_0()); }
		('<')
		{ after(grammarAccess.getRelationalOperatorAccess().getMinorEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getMinorEqualEnumLiteralDeclaration_1()); }
		('<=')
		{ after(grammarAccess.getRelationalOperatorAccess().getMinorEqualEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getEqualEnumLiteralDeclaration_2()); }
		('==')
		{ after(grammarAccess.getRelationalOperatorAccess().getEqualEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getDifferentEnumLiteralDeclaration_3()); }
		('!=')
		{ after(grammarAccess.getRelationalOperatorAccess().getDifferentEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getMajorEqualEnumLiteralDeclaration_4()); }
		('>=')
		{ after(grammarAccess.getRelationalOperatorAccess().getMajorEqualEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getMajorEnumLiteralDeclaration_5()); }
		('>')
		{ after(grammarAccess.getRelationalOperatorAccess().getMajorEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getANDEnumLiteralDeclaration_6()); }
		('&&')
		{ after(grammarAccess.getRelationalOperatorAccess().getANDEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getOREnumLiteralDeclaration_7()); }
		('||')
		{ after(grammarAccess.getRelationalOperatorAccess().getOREnumLiteralDeclaration_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodTypeAccess().getGETEnumLiteralDeclaration_0()); }
		('GET')
		{ after(grammarAccess.getMethodTypeAccess().getGETEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodTypeAccess().getPOSTEnumLiteralDeclaration_1()); }
		('POST')
		{ after(grammarAccess.getMethodTypeAccess().getPOSTEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getMethodTypeAccess().getPUTEnumLiteralDeclaration_2()); }
		('PUT')
		{ after(grammarAccess.getMethodTypeAccess().getPUTEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getMethodTypeAccess().getDELETEEnumLiteralDeclaration_3()); }
		('DELETE')
		{ after(grammarAccess.getMethodTypeAccess().getDELETEEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterTypeAccess().getPathEnumLiteralDeclaration_0()); }
		('/:')
		{ after(grammarAccess.getParameterTypeAccess().getPathEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterTypeAccess().getQueryEnumLiteralDeclaration_1()); }
		('?$')
		{ after(grammarAccess.getParameterTypeAccess().getQueryEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MockTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMockTypesAccess().getFirstNameTypeEnumLiteralDeclaration_0()); }
		('FirstNameType')
		{ after(grammarAccess.getMockTypesAccess().getFirstNameTypeEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMockTypesAccess().getFirstNameMaleTypeEnumLiteralDeclaration_1()); }
		('FirstNameMaleType')
		{ after(grammarAccess.getMockTypesAccess().getFirstNameMaleTypeEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getMockTypesAccess().getFirstNameFemaleTypeEnumLiteralDeclaration_2()); }
		('FirstNameFemaleType')
		{ after(grammarAccess.getMockTypesAccess().getFirstNameFemaleTypeEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getMockTypesAccess().getLastNameTypeEnumLiteralDeclaration_3()); }
		('LastNameType')
		{ after(grammarAccess.getMockTypesAccess().getLastNameTypeEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getMockTypesAccess().getFamilyNameTypeEnumLiteralDeclaration_4()); }
		('FamilyNameType')
		{ after(grammarAccess.getMockTypesAccess().getFamilyNameTypeEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getMockTypesAccess().getFullNameTypeEnumLiteralDeclaration_5()); }
		('FullNameType')
		{ after(grammarAccess.getMockTypesAccess().getFullNameTypeEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getMockTypesAccess().getGenderTypeEnumLiteralDeclaration_6()); }
		('GenderType')
		{ after(grammarAccess.getMockTypesAccess().getGenderTypeEnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getMockTypesAccess().getEmailAddressTypeEnumLiteralDeclaration_7()); }
		('EmailAddressType')
		{ after(grammarAccess.getMockTypesAccess().getEmailAddressTypeEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getMockTypesAccess().getPhoneTypeEnumLiteralDeclaration_8()); }
		('PhoneType')
		{ after(grammarAccess.getMockTypesAccess().getPhoneTypeEnumLiteralDeclaration_8()); }
	)
	|
	(
		{ before(grammarAccess.getMockTypesAccess().getCountryTypeEnumLiteralDeclaration_9()); }
		('CountryType')
		{ after(grammarAccess.getMockTypesAccess().getCountryTypeEnumLiteralDeclaration_9()); }
	)
	|
	(
		{ before(grammarAccess.getMockTypesAccess().getCountryCodeTypeEnumLiteralDeclaration_10()); }
		('CountryCodeType')
		{ after(grammarAccess.getMockTypesAccess().getCountryCodeTypeEnumLiteralDeclaration_10()); }
	)
	|
	(
		{ before(grammarAccess.getMockTypesAccess().getCityTypeEnumLiteralDeclaration_11()); }
		('CityType')
		{ after(grammarAccess.getMockTypesAccess().getCityTypeEnumLiteralDeclaration_11()); }
	)
	|
	(
		{ before(grammarAccess.getMockTypesAccess().getRowNumberTypeEnumLiteralDeclaration_12()); }
		('RowNumberType')
		{ after(grammarAccess.getMockTypesAccess().getRowNumberTypeEnumLiteralDeclaration_12()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutomatedRestTesting__Group__0__Impl
	rule__AutomatedRestTesting__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatedRestTestingAccess().getAutomatedRestTestingAction_0()); }
	()
	{ after(grammarAccess.getAutomatedRestTestingAccess().getAutomatedRestTestingAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutomatedRestTesting__Group__1__Impl
	rule__AutomatedRestTesting__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatedRestTestingAccess().getApiURLKeyword_1()); }
	'apiURL'
	{ after(grammarAccess.getAutomatedRestTestingAccess().getApiURLKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutomatedRestTesting__Group__2__Impl
	rule__AutomatedRestTesting__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatedRestTestingAccess().getEQUALTerminalRuleCall_2()); }
	RULE_EQUAL
	{ after(grammarAccess.getAutomatedRestTestingAccess().getEQUALTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutomatedRestTesting__Group__3__Impl
	rule__AutomatedRestTesting__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatedRestTestingAccess().getUrlAssignment_3()); }
	(rule__AutomatedRestTesting__UrlAssignment_3)
	{ after(grammarAccess.getAutomatedRestTestingAccess().getUrlAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutomatedRestTesting__Group__4__Impl
	rule__AutomatedRestTesting__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatedRestTestingAccess().getSEMICOLONTerminalRuleCall_4()); }
	RULE_SEMICOLON
	{ after(grammarAccess.getAutomatedRestTestingAccess().getSEMICOLONTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutomatedRestTesting__Group__5__Impl
	rule__AutomatedRestTesting__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatedRestTestingAccess().getGroup_5()); }
	(rule__AutomatedRestTesting__Group_5__0)?
	{ after(grammarAccess.getAutomatedRestTestingAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutomatedRestTesting__Group__6__Impl
	rule__AutomatedRestTesting__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatedRestTestingAccess().getGroup_6()); }
	(rule__AutomatedRestTesting__Group_6__0)?
	{ after(grammarAccess.getAutomatedRestTestingAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutomatedRestTesting__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatedRestTestingAccess().getGroup_7()); }
	(rule__AutomatedRestTesting__Group_7__0)?
	{ after(grammarAccess.getAutomatedRestTestingAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AutomatedRestTesting__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutomatedRestTesting__Group_5__0__Impl
	rule__AutomatedRestTesting__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatedRestTestingAccess().getDataElementsAssignment_5_0()); }
	(rule__AutomatedRestTesting__DataElementsAssignment_5_0)
	{ after(grammarAccess.getAutomatedRestTestingAccess().getDataElementsAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutomatedRestTesting__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatedRestTestingAccess().getDataElementsAssignment_5_1()); }
	(rule__AutomatedRestTesting__DataElementsAssignment_5_1)*
	{ after(grammarAccess.getAutomatedRestTestingAccess().getDataElementsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AutomatedRestTesting__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutomatedRestTesting__Group_6__0__Impl
	rule__AutomatedRestTesting__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatedRestTestingAccess().getServicesAssignment_6_0()); }
	(rule__AutomatedRestTesting__ServicesAssignment_6_0)
	{ after(grammarAccess.getAutomatedRestTestingAccess().getServicesAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutomatedRestTesting__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatedRestTestingAccess().getServicesAssignment_6_1()); }
	(rule__AutomatedRestTesting__ServicesAssignment_6_1)*
	{ after(grammarAccess.getAutomatedRestTestingAccess().getServicesAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AutomatedRestTesting__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutomatedRestTesting__Group_7__0__Impl
	rule__AutomatedRestTesting__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatedRestTestingAccess().getTestsAssignment_7_0()); }
	(rule__AutomatedRestTesting__TestsAssignment_7_0)
	{ after(grammarAccess.getAutomatedRestTestingAccess().getTestsAssignment_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AutomatedRestTesting__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAutomatedRestTestingAccess().getTestsAssignment_7_1()); }
	(rule__AutomatedRestTesting__TestsAssignment_7_1)*
	{ after(grammarAccess.getAutomatedRestTestingAccess().getTestsAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestService__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__0__Impl
	rule__RestService__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getMethodAssignment_0()); }
	(rule__RestService__MethodAssignment_0)
	{ after(grammarAccess.getRestServiceAccess().getMethodAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__1__Impl
	rule__RestService__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getNameAssignment_1()); }
	(rule__RestService__NameAssignment_1)
	{ after(grammarAccess.getRestServiceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__2__Impl
	rule__RestService__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getLEFT_BRACKETTerminalRuleCall_2()); }
	RULE_LEFT_BRACKET
	{ after(grammarAccess.getRestServiceAccess().getLEFT_BRACKETTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__3__Impl
	rule__RestService__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getURLKeyword_3()); }
	'URL'
	{ after(grammarAccess.getRestServiceAccess().getURLKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__4__Impl
	rule__RestService__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getEQUALTerminalRuleCall_4()); }
	RULE_EQUAL
	{ after(grammarAccess.getRestServiceAccess().getEQUALTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__5__Impl
	rule__RestService__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getUriAssignment_5()); }
	(rule__RestService__UriAssignment_5)
	{ after(grammarAccess.getRestServiceAccess().getUriAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__6__Impl
	rule__RestService__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getEStringParserRuleCall_6()); }
	ruleEString
	{ after(grammarAccess.getRestServiceAccess().getEStringParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__7__Impl
	rule__RestService__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getAlternatives_7()); }
	(rule__RestService__Alternatives_7)*
	{ after(grammarAccess.getRestServiceAccess().getAlternatives_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__8__Impl
	rule__RestService__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getSEMICOLONTerminalRuleCall_8()); }
	RULE_SEMICOLON
	{ after(grammarAccess.getRestServiceAccess().getSEMICOLONTerminalRuleCall_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__9__Impl
	rule__RestService__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getGroup_9()); }
	(rule__RestService__Group_9__0)?
	{ after(grammarAccess.getRestServiceAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__10__Impl
	rule__RestService__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getResponseKeyword_10()); }
	'Response'
	{ after(grammarAccess.getRestServiceAccess().getResponseKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__11__Impl
	rule__RestService__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getLEFT_BRACKETTerminalRuleCall_11()); }
	RULE_LEFT_BRACKET
	{ after(grammarAccess.getRestServiceAccess().getLEFT_BRACKETTerminalRuleCall_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__12__Impl
	rule__RestService__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getTypeKeyword_12()); }
	'Type'
	{ after(grammarAccess.getRestServiceAccess().getTypeKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__13__Impl
	rule__RestService__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getEQUALTerminalRuleCall_13()); }
	RULE_EQUAL
	{ after(grammarAccess.getRestServiceAccess().getEQUALTerminalRuleCall_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__14__Impl
	rule__RestService__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getResponseAssignment_14()); }
	(rule__RestService__ResponseAssignment_14)
	{ after(grammarAccess.getRestServiceAccess().getResponseAssignment_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__15__Impl
	rule__RestService__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getGroup_15()); }
	(rule__RestService__Group_15__0)?
	{ after(grammarAccess.getRestServiceAccess().getGroup_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__16__Impl
	rule__RestService__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getSEMICOLONTerminalRuleCall_16()); }
	RULE_SEMICOLON
	{ after(grammarAccess.getRestServiceAccess().getSEMICOLONTerminalRuleCall_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__17__Impl
	rule__RestService__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getRIGHT_BRACKETTerminalRuleCall_17()); }
	RULE_RIGHT_BRACKET
	{ after(grammarAccess.getRestServiceAccess().getRIGHT_BRACKETTerminalRuleCall_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__18
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group__18__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group__18__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getRIGHT_BRACKETTerminalRuleCall_18()); }
	RULE_RIGHT_BRACKET
	{ after(grammarAccess.getRestServiceAccess().getRIGHT_BRACKETTerminalRuleCall_18()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestService__Group_7_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group_7_0__0__Impl
	rule__RestService__Group_7_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_7_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getSLASHTerminalRuleCall_7_0_0()); }
	RULE_SLASH
	{ after(grammarAccess.getRestServiceAccess().getSLASHTerminalRuleCall_7_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_7_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group_7_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_7_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getEStringParserRuleCall_7_0_1()); }
	ruleEString
	{ after(grammarAccess.getRestServiceAccess().getEStringParserRuleCall_7_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestService__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group_9__0__Impl
	rule__RestService__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getRequestKeyword_9_0()); }
	'Request'
	{ after(grammarAccess.getRestServiceAccess().getRequestKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group_9__1__Impl
	rule__RestService__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getLEFT_BRACKETTerminalRuleCall_9_1()); }
	RULE_LEFT_BRACKET
	{ after(grammarAccess.getRestServiceAccess().getLEFT_BRACKETTerminalRuleCall_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group_9__2__Impl
	rule__RestService__Group_9__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getTypeKeyword_9_2()); }
	'Type'
	{ after(grammarAccess.getRestServiceAccess().getTypeKeyword_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group_9__3__Impl
	rule__RestService__Group_9__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getEQUALTerminalRuleCall_9_3()); }
	RULE_EQUAL
	{ after(grammarAccess.getRestServiceAccess().getEQUALTerminalRuleCall_9_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group_9__4__Impl
	rule__RestService__Group_9__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getRequestAssignment_9_4()); }
	(rule__RestService__RequestAssignment_9_4)
	{ after(grammarAccess.getRestServiceAccess().getRequestAssignment_9_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group_9__5__Impl
	rule__RestService__Group_9__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getGroup_9_5()); }
	(rule__RestService__Group_9_5__0)?
	{ after(grammarAccess.getRestServiceAccess().getGroup_9_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group_9__6__Impl
	rule__RestService__Group_9__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getSEMICOLONTerminalRuleCall_9_6()); }
	RULE_SEMICOLON
	{ after(grammarAccess.getRestServiceAccess().getSEMICOLONTerminalRuleCall_9_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group_9__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getRIGHT_BRACKETTerminalRuleCall_9_7()); }
	RULE_RIGHT_BRACKET
	{ after(grammarAccess.getRestServiceAccess().getRIGHT_BRACKETTerminalRuleCall_9_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestService__Group_9_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group_9_5__0__Impl
	rule__RestService__Group_9_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getSQUARE_LEFT_BRACKETTerminalRuleCall_9_5_0()); }
	RULE_SQUARE_LEFT_BRACKET
	{ after(grammarAccess.getRestServiceAccess().getSQUARE_LEFT_BRACKETTerminalRuleCall_9_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group_9_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_9_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getSQUARE_RIGHT_BRACKETTerminalRuleCall_9_5_1()); }
	RULE_SQUARE_RIGHT_BRACKET
	{ after(grammarAccess.getRestServiceAccess().getSQUARE_RIGHT_BRACKETTerminalRuleCall_9_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RestService__Group_15__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group_15__0__Impl
	rule__RestService__Group_15__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_15__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getSQUARE_LEFT_BRACKETTerminalRuleCall_15_0()); }
	RULE_SQUARE_LEFT_BRACKET
	{ after(grammarAccess.getRestServiceAccess().getSQUARE_LEFT_BRACKETTerminalRuleCall_15_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_15__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RestService__Group_15__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__Group_15__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestServiceAccess().getSQUARE_RIGHT_BRACKETTerminalRuleCall_15_1()); }
	RULE_SQUARE_RIGHT_BRACKET
	{ after(grammarAccess.getRestServiceAccess().getSQUARE_RIGHT_BRACKETTerminalRuleCall_15_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__0__Impl
	rule__Test__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getTestKeyword_0()); }
	'Test'
	{ after(grammarAccess.getTestAccess().getTestKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__1__Impl
	rule__Test__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getNameAssignment_1()); }
	(rule__Test__NameAssignment_1)
	{ after(grammarAccess.getTestAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__2__Impl
	rule__Test__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getLEFT_BRACKETTerminalRuleCall_2()); }
	RULE_LEFT_BRACKET
	{ after(grammarAccess.getTestAccess().getLEFT_BRACKETTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__3__Impl
	rule__Test__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getServiceKeyword_3()); }
	'service'
	{ after(grammarAccess.getTestAccess().getServiceKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__4__Impl
	rule__Test__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getEQUALTerminalRuleCall_4()); }
	RULE_EQUAL
	{ after(grammarAccess.getTestAccess().getEQUALTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__5__Impl
	rule__Test__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getServiceAssignment_5()); }
	(rule__Test__ServiceAssignment_5)
	{ after(grammarAccess.getTestAccess().getServiceAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__6__Impl
	rule__Test__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getSEMICOLONTerminalRuleCall_6()); }
	RULE_SEMICOLON
	{ after(grammarAccess.getTestAccess().getSEMICOLONTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__7__Impl
	rule__Test__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getGroup_7()); }
	(rule__Test__Group_7__0)?
	{ after(grammarAccess.getTestAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__8__Impl
	rule__Test__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getGroup_8()); }
	(rule__Test__Group_8__0)?
	{ after(grammarAccess.getTestAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__9__Impl
	rule__Test__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getAssertionsKeyword_9()); }
	'Assertions'
	{ after(grammarAccess.getTestAccess().getAssertionsKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__10__Impl
	rule__Test__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getLEFT_BRACKETTerminalRuleCall_10()); }
	RULE_LEFT_BRACKET
	{ after(grammarAccess.getTestAccess().getLEFT_BRACKETTerminalRuleCall_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__11__Impl
	rule__Test__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTestAccess().getGroup_11()); }
		(rule__Test__Group_11__0)
		{ after(grammarAccess.getTestAccess().getGroup_11()); }
	)
	(
		{ before(grammarAccess.getTestAccess().getGroup_11()); }
		(rule__Test__Group_11__0)*
		{ after(grammarAccess.getTestAccess().getGroup_11()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__12__Impl
	rule__Test__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getRIGHT_BRACKETTerminalRuleCall_12()); }
	RULE_RIGHT_BRACKET
	{ after(grammarAccess.getTestAccess().getRIGHT_BRACKETTerminalRuleCall_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getRIGHT_BRACKETTerminalRuleCall_13()); }
	RULE_RIGHT_BRACKET
	{ after(grammarAccess.getTestAccess().getRIGHT_BRACKETTerminalRuleCall_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group_7__0__Impl
	rule__Test__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getDescriptionKeyword_7_0()); }
	'description'
	{ after(grammarAccess.getTestAccess().getDescriptionKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group_7__1__Impl
	rule__Test__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getEQUALTerminalRuleCall_7_1()); }
	RULE_EQUAL
	{ after(grammarAccess.getTestAccess().getEQUALTerminalRuleCall_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group_7__2__Impl
	rule__Test__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getDescriptionAssignment_7_2()); }
	(rule__Test__DescriptionAssignment_7_2)
	{ after(grammarAccess.getTestAccess().getDescriptionAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getSEMICOLONTerminalRuleCall_7_3()); }
	RULE_SEMICOLON
	{ after(grammarAccess.getTestAccess().getSEMICOLONTerminalRuleCall_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group_8__0__Impl
	rule__Test__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getMappingKeyword_8_0()); }
	'Mapping'
	{ after(grammarAccess.getTestAccess().getMappingKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group_8__1__Impl
	rule__Test__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getSQUARE_LEFT_BRACKETTerminalRuleCall_8_1()); }
	RULE_SQUARE_LEFT_BRACKET
	{ after(grammarAccess.getTestAccess().getSQUARE_LEFT_BRACKETTerminalRuleCall_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group_8__2__Impl
	rule__Test__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getMappingsAssignment_8_2()); }
	(rule__Test__MappingsAssignment_8_2)
	{ after(grammarAccess.getTestAccess().getMappingsAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group_8__3__Impl
	rule__Test__Group_8__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getMappingsAssignment_8_3()); }
	(rule__Test__MappingsAssignment_8_3)*
	{ after(grammarAccess.getTestAccess().getMappingsAssignment_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_8__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group_8__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_8__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getSQUARE_RIGHT_BRACKETTerminalRuleCall_8_4()); }
	RULE_SQUARE_RIGHT_BRACKET
	{ after(grammarAccess.getTestAccess().getSQUARE_RIGHT_BRACKETTerminalRuleCall_8_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group_11__0__Impl
	rule__Test__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getAssertionsAssignment_11_0()); }
	(rule__Test__AssertionsAssignment_11_0)
	{ after(grammarAccess.getTestAccess().getAssertionsAssignment_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Test__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAccess().getSEMICOLONTerminalRuleCall_11_1()); }
	RULE_SEMICOLON
	{ after(grammarAccess.getTestAccess().getSEMICOLONTerminalRuleCall_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assertion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assertion__Group__0__Impl
	rule__Assertion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionAccess().getGroup_0()); }
	(rule__Assertion__Group_0__0)?
	{ after(grammarAccess.getAssertionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assertion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionAccess().getConditionAssignment_1()); }
	(rule__Assertion__ConditionAssignment_1)
	{ after(grammarAccess.getAssertionAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assertion__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assertion__Group_0__0__Impl
	rule__Assertion__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionAccess().getAssertionTypeAssignment_0_0()); }
	(rule__Assertion__AssertionTypeAssignment_0_0)
	{ after(grammarAccess.getAssertionAccess().getAssertionTypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assertion__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssertionAccess().getDataToTestAssignment_0_1()); }
	(rule__Assertion__DataToTestAssignment_0_1)
	{ after(grammarAccess.getAssertionAccess().getDataToTestAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getDOTTerminalRuleCall_1_0()); }
	RULE_DOT
	{ after(grammarAccess.getQualifiedNameAccess().getDOTTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRelationalOperatorAssignment_0()); }
	(rule__Expression__RelationalOperatorAssignment_0)
	{ after(grammarAccess.getExpressionAccess().getRelationalOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
	(rule__Expression__Group_1__0)?
	{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1_0()); }
	(rule__Expression__Group_1_0__0)?
	{ after(grammarAccess.getExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpectedValueAssignment_1_1()); }
	(rule__Expression__ExpectedValueAssignment_1_1)
	{ after(grammarAccess.getExpressionAccess().getExpectedValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0__0__Impl
	rule__Expression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getParameterKeyword_1_0_0()); }
	'parameter'
	{ after(grammarAccess.getExpressionAccess().getParameterKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getAlternatives_1_0_1()); }
	(rule__Expression__Alternatives_1_0_1)
	{ after(grammarAccess.getExpressionAccess().getAlternatives_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingElement__Group__0__Impl
	rule__MappingElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingElementAccess().getLEFT_BRACKETTerminalRuleCall_0()); }
	RULE_LEFT_BRACKET
	{ after(grammarAccess.getMappingElementAccess().getLEFT_BRACKETTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingElement__Group__1__Impl
	rule__MappingElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingElementAccess().getParameterKeyword_1()); }
	'parameter'
	{ after(grammarAccess.getMappingElementAccess().getParameterKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingElement__Group__2__Impl
	rule__MappingElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingElementAccess().getEQUALTerminalRuleCall_2()); }
	RULE_EQUAL
	{ after(grammarAccess.getMappingElementAccess().getEQUALTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingElement__Group__3__Impl
	rule__MappingElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingElementAccess().getParameterAssignment_3()); }
	(rule__MappingElement__ParameterAssignment_3)
	{ after(grammarAccess.getMappingElementAccess().getParameterAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingElement__Group__4__Impl
	rule__MappingElement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingElementAccess().getCOMMATerminalRuleCall_4()); }
	RULE_COMMA
	{ after(grammarAccess.getMappingElementAccess().getCOMMATerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingElement__Group__5__Impl
	rule__MappingElement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingElementAccess().getValueKeyword_5()); }
	'value'
	{ after(grammarAccess.getMappingElementAccess().getValueKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingElement__Group__6__Impl
	rule__MappingElement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingElementAccess().getEQUALTerminalRuleCall_6()); }
	RULE_EQUAL
	{ after(grammarAccess.getMappingElementAccess().getEQUALTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingElement__Group__7__Impl
	rule__MappingElement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingElementAccess().getGroup_7()); }
	(rule__MappingElement__Group_7__0)?
	{ after(grammarAccess.getMappingElementAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingElement__Group__8__Impl
	rule__MappingElement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingElementAccess().getValueAssignment_8()); }
	(rule__MappingElement__ValueAssignment_8)
	{ after(grammarAccess.getMappingElementAccess().getValueAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingElement__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingElementAccess().getRIGHT_BRACKETTerminalRuleCall_9()); }
	RULE_RIGHT_BRACKET
	{ after(grammarAccess.getMappingElementAccess().getRIGHT_BRACKETTerminalRuleCall_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingElement__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingElement__Group_7__0__Impl
	rule__MappingElement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingElementAccess().getRequestKeyword_7_0()); }
	'request'
	{ after(grammarAccess.getMappingElementAccess().getRequestKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingElement__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingElementAccess().getARROWTerminalRuleCall_7_1()); }
	RULE_ARROW
	{ after(grammarAccess.getMappingElementAccess().getARROWTerminalRuleCall_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParameterAction_0()); }
	()
	{ after(grammarAccess.getParameterAccess().getParameterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParamTypeAssignment_1()); }
	(rule__Parameter__ParamTypeAssignment_1)
	{ after(grammarAccess.getParameterAccess().getParamTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getLEFT_BRACKETTerminalRuleCall_2()); }
	RULE_LEFT_BRACKET
	{ after(grammarAccess.getParameterAccess().getLEFT_BRACKETTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__3__Impl
	rule__Parameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getValueAssignment_3()); }
	(rule__Parameter__ValueAssignment_3)
	{ after(grammarAccess.getParameterAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getRIGHT_BRACKETTerminalRuleCall_4()); }
	RULE_RIGHT_BRACKET
	{ after(grammarAccess.getParameterAccess().getRIGHT_BRACKETTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Restriction__Group__0__Impl
	rule__Restriction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestrictionAccess().getRestrictionAction_0()); }
	()
	{ after(grammarAccess.getRestrictionAccess().getRestrictionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Restriction__Group__1__Impl
	rule__Restriction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestrictionAccess().getMockTypeKeyword_1()); }
	'mockType'
	{ after(grammarAccess.getRestrictionAccess().getMockTypeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Restriction__Group__2__Impl
	rule__Restriction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestrictionAccess().getEQUALTerminalRuleCall_2()); }
	RULE_EQUAL
	{ after(grammarAccess.getRestrictionAccess().getEQUALTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Restriction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRestrictionAccess().getMockTypeAssignment_3()); }
	(rule__Restriction__MockTypeAssignment_3)
	{ after(grammarAccess.getRestrictionAccess().getMockTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityAction_0()); }
	()
	{ after(grammarAccess.getEntityAccess().getEntityAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_1()); }
	'Entity'
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_2()); }
	(rule__Entity__NameAssignment_2)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getLEFT_BRACKETTerminalRuleCall_3()); }
	RULE_LEFT_BRACKET
	{ after(grammarAccess.getEntityAccess().getLEFT_BRACKETTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityAttributesAssignment_4()); }
	(rule__Entity__EntityAttributesAssignment_4)
	{ after(grammarAccess.getEntityAccess().getEntityAttributesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__5__Impl
	rule__Entity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getSEMICOLONTerminalRuleCall_5()); }
	RULE_SEMICOLON
	{ after(grammarAccess.getEntityAccess().getSEMICOLONTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__6__Impl
	rule__Entity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_6()); }
	(rule__Entity__Group_6__0)*
	{ after(grammarAccess.getEntityAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRIGHT_BRACKETTerminalRuleCall_7()); }
	RULE_RIGHT_BRACKET
	{ after(grammarAccess.getEntityAccess().getRIGHT_BRACKETTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_6__0__Impl
	rule__Entity__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityAttributesAssignment_6_0()); }
	(rule__Entity__EntityAttributesAssignment_6_0)
	{ after(grammarAccess.getEntityAccess().getEntityAttributesAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getSEMICOLONTerminalRuleCall_6_1()); }
	RULE_SEMICOLON
	{ after(grammarAccess.getEntityAccess().getSEMICOLONTerminalRuleCall_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute_Impl__Group__0__Impl
	rule__Attribute_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttribute_ImplAccess().getAttributeAction_0()); }
	()
	{ after(grammarAccess.getAttribute_ImplAccess().getAttributeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute_Impl__Group__1__Impl
	rule__Attribute_Impl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttribute_ImplAccess().getTypeAssignment_1()); }
	(rule__Attribute_Impl__TypeAssignment_1)
	{ after(grammarAccess.getAttribute_ImplAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute_Impl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute_Impl__Group__2__Impl
	rule__Attribute_Impl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute_Impl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttribute_ImplAccess().getGroup_2()); }
	(rule__Attribute_Impl__Group_2__0)?
	{ after(grammarAccess.getAttribute_ImplAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute_Impl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute_Impl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute_Impl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttribute_ImplAccess().getNameAssignment_3()); }
	(rule__Attribute_Impl__NameAssignment_3)
	{ after(grammarAccess.getAttribute_ImplAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute_Impl__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute_Impl__Group_2__0__Impl
	rule__Attribute_Impl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute_Impl__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttribute_ImplAccess().getIsArrayAssignment_2_0()); }
	(rule__Attribute_Impl__IsArrayAssignment_2_0)
	{ after(grammarAccess.getAttribute_ImplAccess().getIsArrayAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute_Impl__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute_Impl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute_Impl__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttribute_ImplAccess().getSQUARE_RIGHT_BRACKETTerminalRuleCall_2_1()); }
	RULE_SQUARE_RIGHT_BRACKET
	{ after(grammarAccess.getAttribute_ImplAccess().getSQUARE_RIGHT_BRACKETTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainAttribute__Group__0__Impl
	rule__DomainAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAttributeAccess().getDomainAttributeAction_0()); }
	()
	{ after(grammarAccess.getDomainAttributeAccess().getDomainAttributeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainAttribute__Group__1__Impl
	rule__DomainAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAttributeAccess().getTypeAssignment_1()); }
	(rule__DomainAttribute__TypeAssignment_1)
	{ after(grammarAccess.getDomainAttributeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainAttribute__Group__2__Impl
	rule__DomainAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAttributeAccess().getGroup_2()); }
	(rule__DomainAttribute__Group_2__0)?
	{ after(grammarAccess.getDomainAttributeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainAttribute__Group__3__Impl
	rule__DomainAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAttributeAccess().getNameAssignment_3()); }
	(rule__DomainAttribute__NameAssignment_3)
	{ after(grammarAccess.getDomainAttributeAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainAttribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAttributeAccess().getGroup_4()); }
	(rule__DomainAttribute__Group_4__0)?
	{ after(grammarAccess.getDomainAttributeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainAttribute__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainAttribute__Group_2__0__Impl
	rule__DomainAttribute__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAttributeAccess().getIsArrayAssignment_2_0()); }
	(rule__DomainAttribute__IsArrayAssignment_2_0)
	{ after(grammarAccess.getDomainAttributeAccess().getIsArrayAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainAttribute__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAttributeAccess().getSQUARE_RIGHT_BRACKETTerminalRuleCall_2_1()); }
	RULE_SQUARE_RIGHT_BRACKET
	{ after(grammarAccess.getDomainAttributeAccess().getSQUARE_RIGHT_BRACKETTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainAttribute__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainAttribute__Group_4__0__Impl
	rule__DomainAttribute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAttributeAccess().getLEFT_PARENTHESISTerminalRuleCall_4_0()); }
	RULE_LEFT_PARENTHESIS
	{ after(grammarAccess.getDomainAttributeAccess().getLEFT_PARENTHESISTerminalRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainAttribute__Group_4__1__Impl
	rule__DomainAttribute__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAttributeAccess().getGroup_4_1()); }
	(rule__DomainAttribute__Group_4_1__0)?
	{ after(grammarAccess.getDomainAttributeAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainAttribute__Group_4__2__Impl
	rule__DomainAttribute__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAttributeAccess().getRestrictionsAssignment_4_2()); }
	(rule__DomainAttribute__RestrictionsAssignment_4_2)
	{ after(grammarAccess.getDomainAttributeAccess().getRestrictionsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainAttribute__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAttributeAccess().getRIGHT_PARENTHESISTerminalRuleCall_4_3()); }
	RULE_RIGHT_PARENTHESIS
	{ after(grammarAccess.getDomainAttributeAccess().getRIGHT_PARENTHESISTerminalRuleCall_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainAttribute__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainAttribute__Group_4_1__0__Impl
	rule__DomainAttribute__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAttributeAccess().getPrimaryKeyAssignment_4_1_0()); }
	(rule__DomainAttribute__PrimaryKeyAssignment_4_1_0)
	{ after(grammarAccess.getDomainAttributeAccess().getPrimaryKeyAssignment_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainAttribute__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainAttributeAccess().getCOMMATerminalRuleCall_4_1_1()); }
	RULE_COMMA
	{ after(grammarAccess.getDomainAttributeAccess().getCOMMATerminalRuleCall_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleEntity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__0__Impl
	rule__SimpleEntity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getSimpleEntityAction_0()); }
	()
	{ after(grammarAccess.getSimpleEntityAccess().getSimpleEntityAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__1__Impl
	rule__SimpleEntity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getSimpleEntityKeyword_1()); }
	'SimpleEntity'
	{ after(grammarAccess.getSimpleEntityAccess().getSimpleEntityKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__2__Impl
	rule__SimpleEntity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getNameAssignment_2()); }
	(rule__SimpleEntity__NameAssignment_2)
	{ after(grammarAccess.getSimpleEntityAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__3__Impl
	rule__SimpleEntity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getLEFT_BRACKETTerminalRuleCall_3()); }
	RULE_LEFT_BRACKET
	{ after(grammarAccess.getSimpleEntityAccess().getLEFT_BRACKETTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__4__Impl
	rule__SimpleEntity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getEntityAttributesAssignment_4()); }
	(rule__SimpleEntity__EntityAttributesAssignment_4)
	{ after(grammarAccess.getSimpleEntityAccess().getEntityAttributesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__5__Impl
	rule__SimpleEntity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getSEMICOLONTerminalRuleCall_5()); }
	RULE_SEMICOLON
	{ after(grammarAccess.getSimpleEntityAccess().getSEMICOLONTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__6__Impl
	rule__SimpleEntity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getGroup_6()); }
	(rule__SimpleEntity__Group_6__0)*
	{ after(grammarAccess.getSimpleEntityAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getRIGHT_BRACKETTerminalRuleCall_7()); }
	RULE_RIGHT_BRACKET
	{ after(grammarAccess.getSimpleEntityAccess().getRIGHT_BRACKETTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleEntity__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group_6__0__Impl
	rule__SimpleEntity__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getEntityAttributesAssignment_6_0()); }
	(rule__SimpleEntity__EntityAttributesAssignment_6_0)
	{ after(grammarAccess.getSimpleEntityAccess().getEntityAttributesAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleEntity__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleEntityAccess().getSEMICOLONTerminalRuleCall_6_1()); }
	RULE_SEMICOLON
	{ after(grammarAccess.getSimpleEntityAccess().getSEMICOLONTerminalRuleCall_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AutomatedRestTesting__UrlAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutomatedRestTestingAccess().getUrlEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getAutomatedRestTestingAccess().getUrlEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__DataElementsAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutomatedRestTestingAccess().getDataElementsElementParserRuleCall_5_0_0()); }
		ruleElement
		{ after(grammarAccess.getAutomatedRestTestingAccess().getDataElementsElementParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__DataElementsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutomatedRestTestingAccess().getDataElementsElementParserRuleCall_5_1_0()); }
		ruleElement
		{ after(grammarAccess.getAutomatedRestTestingAccess().getDataElementsElementParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__ServicesAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutomatedRestTestingAccess().getServicesRestServiceParserRuleCall_6_0_0()); }
		ruleRestService
		{ after(grammarAccess.getAutomatedRestTestingAccess().getServicesRestServiceParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__ServicesAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutomatedRestTestingAccess().getServicesRestServiceParserRuleCall_6_1_0()); }
		ruleRestService
		{ after(grammarAccess.getAutomatedRestTestingAccess().getServicesRestServiceParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__TestsAssignment_7_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutomatedRestTestingAccess().getTestsTestParserRuleCall_7_0_0()); }
		ruleTest
		{ after(grammarAccess.getAutomatedRestTestingAccess().getTestsTestParserRuleCall_7_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AutomatedRestTesting__TestsAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAutomatedRestTestingAccess().getTestsTestParserRuleCall_7_1_0()); }
		ruleTest
		{ after(grammarAccess.getAutomatedRestTestingAccess().getTestsTestParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__MethodAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestServiceAccess().getMethodMethodTypeEnumRuleCall_0_0()); }
		ruleMethodType
		{ after(grammarAccess.getRestServiceAccess().getMethodMethodTypeEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestServiceAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getRestServiceAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__UriAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestServiceAccess().getUriSLASHTerminalRuleCall_5_0()); }
		RULE_SLASH
		{ after(grammarAccess.getRestServiceAccess().getUriSLASHTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__ParametersAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestServiceAccess().getParametersParameterParserRuleCall_7_1_0()); }
		ruleParameter
		{ after(grammarAccess.getRestServiceAccess().getParametersParameterParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__RequestAssignment_9_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestServiceAccess().getRequestElementCrossReference_9_4_0()); }
		(
			{ before(grammarAccess.getRestServiceAccess().getRequestElementEStringParserRuleCall_9_4_0_1()); }
			ruleEString
			{ after(grammarAccess.getRestServiceAccess().getRequestElementEStringParserRuleCall_9_4_0_1()); }
		)
		{ after(grammarAccess.getRestServiceAccess().getRequestElementCrossReference_9_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RestService__ResponseAssignment_14
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestServiceAccess().getResponseElementCrossReference_14_0()); }
		(
			{ before(grammarAccess.getRestServiceAccess().getResponseElementEStringParserRuleCall_14_0_1()); }
			ruleEString
			{ after(grammarAccess.getRestServiceAccess().getResponseElementEStringParserRuleCall_14_0_1()); }
		)
		{ after(grammarAccess.getRestServiceAccess().getResponseElementCrossReference_14_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getTestAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__ServiceAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestAccess().getServiceRestServiceCrossReference_5_0()); }
		(
			{ before(grammarAccess.getTestAccess().getServiceRestServiceEStringParserRuleCall_5_0_1()); }
			ruleEString
			{ after(grammarAccess.getTestAccess().getServiceRestServiceEStringParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getTestAccess().getServiceRestServiceCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__DescriptionAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestAccess().getDescriptionEStringParserRuleCall_7_2_0()); }
		ruleEString
		{ after(grammarAccess.getTestAccess().getDescriptionEStringParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__MappingsAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestAccess().getMappingsMappingElementParserRuleCall_8_2_0()); }
		ruleMappingElement
		{ after(grammarAccess.getTestAccess().getMappingsMappingElementParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__MappingsAssignment_8_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestAccess().getMappingsMappingElementParserRuleCall_8_3_0()); }
		ruleMappingElement
		{ after(grammarAccess.getTestAccess().getMappingsMappingElementParserRuleCall_8_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__AssertionsAssignment_11_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestAccess().getAssertionsAssertionParserRuleCall_11_0_0()); }
		ruleAssertion
		{ after(grammarAccess.getTestAccess().getAssertionsAssertionParserRuleCall_11_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__AssertionTypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionAccess().getAssertionTypeAssertionTypeEnumRuleCall_0_0_0()); }
		ruleAssertionType
		{ after(grammarAccess.getAssertionAccess().getAssertionTypeAssertionTypeEnumRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__DataToTestAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionAccess().getDataToTestElementCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getAssertionAccess().getDataToTestElementQualifiedNameParserRuleCall_0_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getAssertionAccess().getDataToTestElementQualifiedNameParserRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getAssertionAccess().getDataToTestElementCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assertion__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssertionAccess().getConditionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getAssertionAccess().getConditionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RelationalOperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRelationalOperatorRelationalOperatorEnumRuleCall_0_0()); }
		ruleRelationalOperator
		{ after(grammarAccess.getExpressionAccess().getRelationalOperatorRelationalOperatorEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpectedValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpectedValueLiteralParserRuleCall_1_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getExpressionAccess().getExpectedValueLiteralParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntegerLiteralAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueEStringParserRuleCall_0()); }
		ruleEString
		{ after(grammarAccess.getStringLiteralAccess().getValueEStringParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementLiteralAccess().getValueElementCrossReference_0()); }
		(
			{ before(grammarAccess.getElementLiteralAccess().getValueElementQualifiedNameParserRuleCall_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getElementLiteralAccess().getValueElementQualifiedNameParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getElementLiteralAccess().getValueElementCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__ParameterAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingElementAccess().getParameterElementCrossReference_3_0()); }
		(
			{ before(grammarAccess.getMappingElementAccess().getParameterElementQualifiedNameParserRuleCall_3_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getMappingElementAccess().getParameterElementQualifiedNameParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getMappingElementAccess().getParameterElementCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingElement__ValueAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingElementAccess().getValueLiteralParserRuleCall_8_0()); }
		ruleLiteral
		{ after(grammarAccess.getMappingElementAccess().getValueLiteralParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ParamTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getParamTypeParameterTypeEnumRuleCall_1_0()); }
		ruleParameterType
		{ after(grammarAccess.getParameterAccess().getParamTypeParameterTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getValueIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getValueIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__MockTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRestrictionAccess().getMockTypeMockTypesEnumRuleCall_3_0()); }
		ruleMockTypes
		{ after(grammarAccess.getRestrictionAccess().getMockTypeMockTypesEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getEntityAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__EntityAttributesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getEntityAttributesDomainAttributeParserRuleCall_4_0()); }
		ruleDomainAttribute
		{ after(grammarAccess.getEntityAccess().getEntityAttributesDomainAttributeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__EntityAttributesAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getEntityAttributesDomainAttributeParserRuleCall_6_0_0()); }
		ruleDomainAttribute
		{ after(grammarAccess.getEntityAccess().getEntityAttributesDomainAttributeParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute_Impl__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttribute_ImplAccess().getTypeAttributeTypeEnumRuleCall_1_0()); }
		ruleAttributeType
		{ after(grammarAccess.getAttribute_ImplAccess().getTypeAttributeTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute_Impl__IsArrayAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttribute_ImplAccess().getIsArraySQUARE_LEFT_BRACKETTerminalRuleCall_2_0_0()); }
		RULE_SQUARE_LEFT_BRACKET
		{ after(grammarAccess.getAttribute_ImplAccess().getIsArraySQUARE_LEFT_BRACKETTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute_Impl__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttribute_ImplAccess().getNameEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getAttribute_ImplAccess().getNameEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainAttributeAccess().getTypeAttributeTypeEnumRuleCall_1_0()); }
		ruleAttributeType
		{ after(grammarAccess.getDomainAttributeAccess().getTypeAttributeTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__IsArrayAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainAttributeAccess().getIsArraySQUARE_LEFT_BRACKETTerminalRuleCall_2_0_0()); }
		RULE_SQUARE_LEFT_BRACKET
		{ after(grammarAccess.getDomainAttributeAccess().getIsArraySQUARE_LEFT_BRACKETTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainAttributeAccess().getNameEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getDomainAttributeAccess().getNameEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__PrimaryKeyAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainAttributeAccess().getPrimaryKeyPKKeyword_4_1_0_0()); }
		(
			{ before(grammarAccess.getDomainAttributeAccess().getPrimaryKeyPKKeyword_4_1_0_0()); }
			'PK'
			{ after(grammarAccess.getDomainAttributeAccess().getPrimaryKeyPKKeyword_4_1_0_0()); }
		)
		{ after(grammarAccess.getDomainAttributeAccess().getPrimaryKeyPKKeyword_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainAttribute__RestrictionsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainAttributeAccess().getRestrictionsRestrictionParserRuleCall_4_2_0()); }
		ruleRestriction
		{ after(grammarAccess.getDomainAttributeAccess().getRestrictionsRestrictionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleEntityAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getSimpleEntityAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__EntityAttributesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleEntityAccess().getEntityAttributesAttributeParserRuleCall_4_0()); }
		ruleAttribute
		{ after(grammarAccess.getSimpleEntityAccess().getEntityAttributesAttributeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleEntity__EntityAttributesAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleEntityAccess().getEntityAttributesAttributeParserRuleCall_6_0_0()); }
		ruleAttribute
		{ after(grammarAccess.getSimpleEntityAccess().getEntityAttributesAttributeParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ARROW : '->';

RULE_EQUAL : '=';

RULE_SEMICOLON : ';';

RULE_LEFT_PARENTHESIS : '(';

RULE_RIGHT_PARENTHESIS : ')';

RULE_LEFT_BRACKET : '{';

RULE_RIGHT_BRACKET : '}';

RULE_SQUARE_LEFT_BRACKET : '[';

RULE_SQUARE_RIGHT_BRACKET : ']';

RULE_COMMA : ',';

RULE_SLASH : '/';

RULE_DOT : '.';

RULE_TWO_DOTS : ':';

RULE_MONEY : '$';

RULE_QUESTION_MARK : '?';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
